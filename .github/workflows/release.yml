name: release
on:
  push:
    tags:
      - "**"
jobs:
  publish:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # Fetch all history 
          fetch-depth: 0
      - name: Maven Publish
        id: maven_publish
        env:
          MAVEN_USERNAME: ${{ secrets.TEACON_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.TEACON_PASSWORD }}
        run: |
          chmod 777 ./gradlew
          ./gradlew publishReleasePublicationToArchiveRepository githubActionOutput
      - name: Generate Changelog
        id: changelog
        shell: bash
        env:
          CURRENT: ${{ github.ref }}
        # Special thanks to this post on Stack Overflow regarding change set between two tags:
        # https://stackoverflow.com/questions/12082981
        # Do note that actions/checkout will enter detach mode by default, so you won't have 
        # access to HEAD ref. Use GitHub-Action-supplied `github.ref` instead.
        # Special thanks to this issue ticket regarding escaping newline:
        # https://github.com/actions/create-release/issues/25
        # We use Bash parameter expansion to do find-and-replace.
        # https://www.gnu.org/software/bash/manual/html_node/Shell-Parameter-Expansion.html
        # Also we cannot use git rev-list because it always prepend "commit <hash>"
        # See https://stackoverflow.com/questions/36927089/
        run: |
          current_tag=${CURRENT/refs\/tags\//}
          last_tag=`git describe --tags --abbrev=0 "$current_tag"^ 2>/dev/null || echo`
          if [ $last_tag ]; then
          changelog=`git log --pretty="format:%H: %s" ${last_tag}..$current_tag`
          else
          changelog=`git log --pretty="format:%H: %s"`
          fi
          changelog="${changelog//'%'/'%25'}"
          changelog="${changelog//$'\n'/'  %0A'}"
          echo "::set-output name=value::Change set since ${last_tag:-the beginning}:  %0A%0A$changelog"
      - name: GitHub Release
        id: create_release
        uses: actions/create-release@v1.1.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
          body: |
            ${{ steps.changelog.outputs.value }}
      - name: GitHub Release Artifact
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.maven_publish.outputs.artifact_path }}
          asset_name: ${{ steps.maven_publish.outputs.artifact_name }}
          # https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types
          asset_content_type: "application/java-archive"
